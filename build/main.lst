ARM GAS  /tmp/ccXehhFx.s 			page 1


   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv5-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.Error_Handler,"ax",%progbits
  20              		.align	1
  21              		.global	Error_Handler
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	Error_Handler:
  27              	.LFB148:
  28              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****  ******************************************************************************
   4:Core/Src/main.c ****  * @file           : main.c
   5:Core/Src/main.c ****  * @brief          : Main program body
   6:Core/Src/main.c ****  ******************************************************************************
   7:Core/Src/main.c ****  * @attention
   8:Core/Src/main.c ****  *
   9:Core/Src/main.c ****  * Copyright (c) 2022 STMicroelectronics.
  10:Core/Src/main.c ****  * All rights reserved.
  11:Core/Src/main.c ****  *
  12:Core/Src/main.c ****  * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****  * in the root directory of this software component.
  14:Core/Src/main.c ****  * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****  *
  16:Core/Src/main.c ****  ******************************************************************************
  17:Core/Src/main.c ****  */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** #include "gpio.h"
  22:Core/Src/main.c **** #include "i2c.h"
  23:Core/Src/main.c **** #include "spi.h"
  24:Core/Src/main.c **** #include "usart.h"
  25:Core/Src/main.c **** #include "usb_otg.h"
  26:Core/Src/main.c **** 
  27:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  28:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  29:Core/Src/main.c **** #include "max11254_loadcell.h"
  30:Core/Src/main.c **** /* USER CODE END Includes */
ARM GAS  /tmp/ccXehhFx.s 			page 2


  31:Core/Src/main.c **** 
  32:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  33:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  34:Core/Src/main.c **** 
  35:Core/Src/main.c **** /* USER CODE END PTD */
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  38:Core/Src/main.c **** /* USER CODE BEGIN PD */
  39:Core/Src/main.c **** /* USER CODE END PD */
  40:Core/Src/main.c **** 
  41:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  42:Core/Src/main.c **** /* USER CODE BEGIN PM */
  43:Core/Src/main.c **** 
  44:Core/Src/main.c **** /* USER CODE END PM */
  45:Core/Src/main.c **** 
  46:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** /* USER CODE BEGIN PV */
  49:Core/Src/main.c **** 
  50:Core/Src/main.c **** /* USER CODE END PV */
  51:Core/Src/main.c **** 
  52:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  53:Core/Src/main.c **** void SystemClock_Config(void);
  54:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  55:Core/Src/main.c **** 
  56:Core/Src/main.c **** /* USER CODE END PFP */
  57:Core/Src/main.c **** 
  58:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  59:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  60:Core/Src/main.c **** 
  61:Core/Src/main.c **** /* USER CODE END 0 */
  62:Core/Src/main.c **** 
  63:Core/Src/main.c **** /**
  64:Core/Src/main.c ****  * @brief  The application entry point.
  65:Core/Src/main.c ****  * @retval int
  66:Core/Src/main.c ****  */
  67:Core/Src/main.c **** int main(void) {
  68:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  69:Core/Src/main.c **** 
  70:Core/Src/main.c ****   /* USER CODE END 1 */
  71:Core/Src/main.c **** 
  72:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  73:Core/Src/main.c **** 
  74:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick.
  75:Core/Src/main.c ****    */
  76:Core/Src/main.c ****   HAL_Init();
  77:Core/Src/main.c **** 
  78:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  79:Core/Src/main.c **** 
  80:Core/Src/main.c ****   /* USER CODE END Init */
  81:Core/Src/main.c **** 
  82:Core/Src/main.c ****   /* Configure the system clock */
  83:Core/Src/main.c ****   SystemClock_Config();
  84:Core/Src/main.c **** 
  85:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  86:Core/Src/main.c **** 
  87:Core/Src/main.c ****   /* USER CODE END SysInit */
ARM GAS  /tmp/ccXehhFx.s 			page 3


  88:Core/Src/main.c **** 
  89:Core/Src/main.c ****   /* Initialize all configured peripherals */
  90:Core/Src/main.c ****   MX_GPIO_Init();
  91:Core/Src/main.c ****   MX_SPI5_Init();
  92:Core/Src/main.c ****   MX_USART3_UART_Init();
  93:Core/Src/main.c ****   MX_USB_OTG_FS_PCD_Init();
  94:Core/Src/main.c ****   MX_I2C1_Init();
  95:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
  96:Core/Src/main.c ****   MAX11254_HandleTypeDef *adc = init_adc(&hspi5);
  97:Core/Src/main.c ****   print_with_average(adc);
  98:Core/Src/main.c **** 
  99:Core/Src/main.c ****   /* USER CODE END 2 */
 100:Core/Src/main.c **** 
 101:Core/Src/main.c ****   /* Infinite loop */
 102:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 103:Core/Src/main.c ****   while (1) {
 104:Core/Src/main.c **** 
 105:Core/Src/main.c ****     /* USER CODE END WHILE */
 106:Core/Src/main.c **** 
 107:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 108:Core/Src/main.c ****   }
 109:Core/Src/main.c ****   /* USER CODE END 3 */
 110:Core/Src/main.c **** }
 111:Core/Src/main.c **** 
 112:Core/Src/main.c **** /**
 113:Core/Src/main.c ****  * @brief System Clock Configuration
 114:Core/Src/main.c ****  * @retval None
 115:Core/Src/main.c ****  */
 116:Core/Src/main.c **** void SystemClock_Config(void) {
 117:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 118:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 119:Core/Src/main.c **** 
 120:Core/Src/main.c ****   /** Configure LSE Drive Capability
 121:Core/Src/main.c ****    */
 122:Core/Src/main.c ****   HAL_PWR_EnableBkUpAccess();
 123:Core/Src/main.c **** 
 124:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 125:Core/Src/main.c ****    */
 126:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 127:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 128:Core/Src/main.c **** 
 129:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 130:Core/Src/main.c ****    * in the RCC_OscInitTypeDef structure.
 131:Core/Src/main.c ****    */
 132:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 133:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_BYPASS;
 134:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 135:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 136:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 4;
 137:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 216;
 138:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 139:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 9;
 140:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK) {
 141:Core/Src/main.c ****     Error_Handler();
 142:Core/Src/main.c ****   }
 143:Core/Src/main.c **** 
 144:Core/Src/main.c ****   /** Activate the Over-Drive mode
ARM GAS  /tmp/ccXehhFx.s 			page 4


 145:Core/Src/main.c ****    */
 146:Core/Src/main.c ****   if (HAL_PWREx_EnableOverDrive() != HAL_OK) {
 147:Core/Src/main.c ****     Error_Handler();
 148:Core/Src/main.c ****   }
 149:Core/Src/main.c **** 
 150:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 151:Core/Src/main.c ****    */
 152:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_SYSCLK |
 153:Core/Src/main.c ****                                 RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 154:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 155:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 156:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 157:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV4;
 158:Core/Src/main.c **** 
 159:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_7) != HAL_OK) {
 160:Core/Src/main.c ****     Error_Handler();
 161:Core/Src/main.c ****   }
 162:Core/Src/main.c **** }
 163:Core/Src/main.c **** 
 164:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 165:Core/Src/main.c **** 
 166:Core/Src/main.c **** /* USER CODE END 4 */
 167:Core/Src/main.c **** 
 168:Core/Src/main.c **** /**
 169:Core/Src/main.c ****  * @brief  This function is executed in case of error occurrence.
 170:Core/Src/main.c ****  * @retval None
 171:Core/Src/main.c ****  */
 172:Core/Src/main.c **** void Error_Handler(void) {
  29              		.loc 1 172 26 view -0
  30              		.cfi_startproc
  31              		@ Volatile: function does not return.
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
 173:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 174:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 175:Core/Src/main.c ****   __disable_irq();
  35              		.loc 1 175 3 view .LVU1
  36              	.LBB4:
  37              	.LBI4:
  38              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
ARM GAS  /tmp/ccXehhFx.s 			page 5


  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
ARM GAS  /tmp/ccXehhFx.s 			page 6


  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  /tmp/ccXehhFx.s 			page 7


 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
  39              		.loc 2 140 27 view .LVU2
  40              	.LBB5:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  41              		.loc 2 142 3 view .LVU3
  42              		.syntax unified
  43              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
  44 0000 72B6     		cpsid i
  45              	@ 0 "" 2
  46              		.thumb
  47              		.syntax unified
  48              	.L2:
  49              	.LBE5:
  50              	.LBE4:
 176:Core/Src/main.c ****   while (1) {
  51              		.loc 1 176 3 discriminator 1 view .LVU4
 177:Core/Src/main.c ****   }
  52              		.loc 1 177 3 discriminator 1 view .LVU5
 176:Core/Src/main.c ****   while (1) {
  53              		.loc 1 176 9 discriminator 1 view .LVU6
  54 0002 FEE7     		b	.L2
  55              		.cfi_endproc
  56              	.LFE148:
  58              		.section	.text.SystemClock_Config,"ax",%progbits
  59              		.align	1
  60              		.global	SystemClock_Config
  61              		.syntax unified
  62              		.thumb
  63              		.thumb_func
  65              	SystemClock_Config:
  66              	.LFB147:
 116:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
  67              		.loc 1 116 31 view -0
  68              		.cfi_startproc
  69              		@ args = 0, pretend = 0, frame = 80
  70              		@ frame_needed = 0, uses_anonymous_args = 0
  71 0000 00B5     		push	{lr}
  72              	.LCFI0:
  73              		.cfi_def_cfa_offset 4
  74              		.cfi_offset 14, -4
  75 0002 95B0     		sub	sp, sp, #84
  76              	.LCFI1:
  77              		.cfi_def_cfa_offset 88
 117:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
  78              		.loc 1 117 3 view .LVU8
 117:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
  79              		.loc 1 117 22 is_stmt 0 view .LVU9
ARM GAS  /tmp/ccXehhFx.s 			page 8


  80 0004 3022     		movs	r2, #48
  81 0006 0021     		movs	r1, #0
  82 0008 08A8     		add	r0, sp, #32
  83 000a FFF7FEFF 		bl	memset
  84              	.LVL0:
 118:Core/Src/main.c **** 
  85              		.loc 1 118 3 is_stmt 1 view .LVU10
 118:Core/Src/main.c **** 
  86              		.loc 1 118 22 is_stmt 0 view .LVU11
  87 000e 0023     		movs	r3, #0
  88 0010 0393     		str	r3, [sp, #12]
  89 0012 0493     		str	r3, [sp, #16]
  90 0014 0593     		str	r3, [sp, #20]
  91 0016 0693     		str	r3, [sp, #24]
  92 0018 0793     		str	r3, [sp, #28]
 122:Core/Src/main.c **** 
  93              		.loc 1 122 3 is_stmt 1 view .LVU12
  94 001a FFF7FEFF 		bl	HAL_PWR_EnableBkUpAccess
  95              	.LVL1:
 126:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
  96              		.loc 1 126 3 view .LVU13
  97              	.LBB6:
 126:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
  98              		.loc 1 126 3 view .LVU14
 126:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
  99              		.loc 1 126 3 view .LVU15
 100 001e 224B     		ldr	r3, .L11
 101 0020 1A6C     		ldr	r2, [r3, #64]
 102 0022 42F08052 		orr	r2, r2, #268435456
 103 0026 1A64     		str	r2, [r3, #64]
 126:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 104              		.loc 1 126 3 view .LVU16
 105 0028 1B6C     		ldr	r3, [r3, #64]
 106 002a 03F08053 		and	r3, r3, #268435456
 107 002e 0193     		str	r3, [sp, #4]
 126:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 108              		.loc 1 126 3 view .LVU17
 109 0030 019B     		ldr	r3, [sp, #4]
 110              	.LBE6:
 126:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 111              		.loc 1 126 3 view .LVU18
 127:Core/Src/main.c **** 
 112              		.loc 1 127 3 view .LVU19
 113              	.LBB7:
 127:Core/Src/main.c **** 
 114              		.loc 1 127 3 view .LVU20
 127:Core/Src/main.c **** 
 115              		.loc 1 127 3 view .LVU21
 116 0032 1E4B     		ldr	r3, .L11+4
 117 0034 1A68     		ldr	r2, [r3]
 118 0036 42F44042 		orr	r2, r2, #49152
 119 003a 1A60     		str	r2, [r3]
 127:Core/Src/main.c **** 
 120              		.loc 1 127 3 view .LVU22
 121 003c 1B68     		ldr	r3, [r3]
 122 003e 03F44043 		and	r3, r3, #49152
 123 0042 0293     		str	r3, [sp, #8]
ARM GAS  /tmp/ccXehhFx.s 			page 9


 127:Core/Src/main.c **** 
 124              		.loc 1 127 3 view .LVU23
 125 0044 029B     		ldr	r3, [sp, #8]
 126              	.LBE7:
 127:Core/Src/main.c **** 
 127              		.loc 1 127 3 view .LVU24
 132:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_BYPASS;
 128              		.loc 1 132 3 view .LVU25
 132:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_BYPASS;
 129              		.loc 1 132 36 is_stmt 0 view .LVU26
 130 0046 0123     		movs	r3, #1
 131 0048 0893     		str	r3, [sp, #32]
 133:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 132              		.loc 1 133 3 is_stmt 1 view .LVU27
 133:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 133              		.loc 1 133 30 is_stmt 0 view .LVU28
 134 004a 4FF4A023 		mov	r3, #327680
 135 004e 0993     		str	r3, [sp, #36]
 134:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 136              		.loc 1 134 3 is_stmt 1 view .LVU29
 134:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 137              		.loc 1 134 34 is_stmt 0 view .LVU30
 138 0050 0223     		movs	r3, #2
 139 0052 0E93     		str	r3, [sp, #56]
 135:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 4;
 140              		.loc 1 135 3 is_stmt 1 view .LVU31
 135:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 4;
 141              		.loc 1 135 35 is_stmt 0 view .LVU32
 142 0054 4FF48002 		mov	r2, #4194304
 143 0058 0F92     		str	r2, [sp, #60]
 136:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 216;
 144              		.loc 1 136 3 is_stmt 1 view .LVU33
 136:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 216;
 145              		.loc 1 136 30 is_stmt 0 view .LVU34
 146 005a 0422     		movs	r2, #4
 147 005c 1092     		str	r2, [sp, #64]
 137:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 148              		.loc 1 137 3 is_stmt 1 view .LVU35
 137:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 149              		.loc 1 137 30 is_stmt 0 view .LVU36
 150 005e D822     		movs	r2, #216
 151 0060 1192     		str	r2, [sp, #68]
 138:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 9;
 152              		.loc 1 138 3 is_stmt 1 view .LVU37
 138:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 9;
 153              		.loc 1 138 30 is_stmt 0 view .LVU38
 154 0062 1293     		str	r3, [sp, #72]
 139:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK) {
 155              		.loc 1 139 3 is_stmt 1 view .LVU39
 139:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK) {
 156              		.loc 1 139 30 is_stmt 0 view .LVU40
 157 0064 0923     		movs	r3, #9
 158 0066 1393     		str	r3, [sp, #76]
 140:Core/Src/main.c ****     Error_Handler();
 159              		.loc 1 140 3 is_stmt 1 view .LVU41
 140:Core/Src/main.c ****     Error_Handler();
 160              		.loc 1 140 7 is_stmt 0 view .LVU42
ARM GAS  /tmp/ccXehhFx.s 			page 10


 161 0068 08A8     		add	r0, sp, #32
 162 006a FFF7FEFF 		bl	HAL_RCC_OscConfig
 163              	.LVL2:
 140:Core/Src/main.c ****     Error_Handler();
 164              		.loc 1 140 6 view .LVU43
 165 006e A0B9     		cbnz	r0, .L8
 146:Core/Src/main.c ****     Error_Handler();
 166              		.loc 1 146 3 is_stmt 1 view .LVU44
 146:Core/Src/main.c ****     Error_Handler();
 167              		.loc 1 146 7 is_stmt 0 view .LVU45
 168 0070 FFF7FEFF 		bl	HAL_PWREx_EnableOverDrive
 169              	.LVL3:
 146:Core/Src/main.c ****     Error_Handler();
 170              		.loc 1 146 6 view .LVU46
 171 0074 98B9     		cbnz	r0, .L9
 152:Core/Src/main.c ****                                 RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 172              		.loc 1 152 3 is_stmt 1 view .LVU47
 152:Core/Src/main.c ****                                 RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 173              		.loc 1 152 31 is_stmt 0 view .LVU48
 174 0076 0F23     		movs	r3, #15
 175 0078 0393     		str	r3, [sp, #12]
 154:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 176              		.loc 1 154 3 is_stmt 1 view .LVU49
 154:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 177              		.loc 1 154 34 is_stmt 0 view .LVU50
 178 007a 0223     		movs	r3, #2
 179 007c 0493     		str	r3, [sp, #16]
 155:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 180              		.loc 1 155 3 is_stmt 1 view .LVU51
 155:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 181              		.loc 1 155 35 is_stmt 0 view .LVU52
 182 007e 0023     		movs	r3, #0
 183 0080 0593     		str	r3, [sp, #20]
 156:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV4;
 184              		.loc 1 156 3 is_stmt 1 view .LVU53
 156:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV4;
 185              		.loc 1 156 36 is_stmt 0 view .LVU54
 186 0082 4FF4A053 		mov	r3, #5120
 187 0086 0693     		str	r3, [sp, #24]
 157:Core/Src/main.c **** 
 188              		.loc 1 157 3 is_stmt 1 view .LVU55
 157:Core/Src/main.c **** 
 189              		.loc 1 157 36 is_stmt 0 view .LVU56
 190 0088 0793     		str	r3, [sp, #28]
 159:Core/Src/main.c ****     Error_Handler();
 191              		.loc 1 159 3 is_stmt 1 view .LVU57
 159:Core/Src/main.c ****     Error_Handler();
 192              		.loc 1 159 7 is_stmt 0 view .LVU58
 193 008a 0721     		movs	r1, #7
 194 008c 03A8     		add	r0, sp, #12
 195 008e FFF7FEFF 		bl	HAL_RCC_ClockConfig
 196              	.LVL4:
 159:Core/Src/main.c ****     Error_Handler();
 197              		.loc 1 159 6 view .LVU59
 198 0092 30B9     		cbnz	r0, .L10
 162:Core/Src/main.c **** 
 199              		.loc 1 162 1 view .LVU60
ARM GAS  /tmp/ccXehhFx.s 			page 11


 200 0094 15B0     		add	sp, sp, #84
 201              	.LCFI2:
 202              		.cfi_remember_state
 203              		.cfi_def_cfa_offset 4
 204              		@ sp needed
 205 0096 5DF804FB 		ldr	pc, [sp], #4
 206              	.L8:
 207              	.LCFI3:
 208              		.cfi_restore_state
 141:Core/Src/main.c ****   }
 209              		.loc 1 141 5 is_stmt 1 view .LVU61
 210 009a FFF7FEFF 		bl	Error_Handler
 211              	.LVL5:
 212              	.L9:
 147:Core/Src/main.c ****   }
 213              		.loc 1 147 5 view .LVU62
 214 009e FFF7FEFF 		bl	Error_Handler
 215              	.LVL6:
 216              	.L10:
 160:Core/Src/main.c ****   }
 217              		.loc 1 160 5 view .LVU63
 218 00a2 FFF7FEFF 		bl	Error_Handler
 219              	.LVL7:
 220              	.L12:
 221 00a6 00BF     		.align	2
 222              	.L11:
 223 00a8 00380240 		.word	1073887232
 224 00ac 00700040 		.word	1073770496
 225              		.cfi_endproc
 226              	.LFE147:
 228              		.section	.text.main,"ax",%progbits
 229              		.align	1
 230              		.global	main
 231              		.syntax unified
 232              		.thumb
 233              		.thumb_func
 235              	main:
 236              	.LFB146:
  67:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 237              		.loc 1 67 16 view -0
 238              		.cfi_startproc
 239              		@ args = 0, pretend = 0, frame = 0
 240              		@ frame_needed = 0, uses_anonymous_args = 0
 241 0000 08B5     		push	{r3, lr}
 242              	.LCFI4:
 243              		.cfi_def_cfa_offset 8
 244              		.cfi_offset 3, -8
 245              		.cfi_offset 14, -4
  76:Core/Src/main.c **** 
 246              		.loc 1 76 3 view .LVU65
 247 0002 FFF7FEFF 		bl	HAL_Init
 248              	.LVL8:
  83:Core/Src/main.c **** 
 249              		.loc 1 83 3 view .LVU66
 250 0006 FFF7FEFF 		bl	SystemClock_Config
 251              	.LVL9:
  90:Core/Src/main.c ****   MX_SPI5_Init();
ARM GAS  /tmp/ccXehhFx.s 			page 12


 252              		.loc 1 90 3 view .LVU67
 253 000a FFF7FEFF 		bl	MX_GPIO_Init
 254              	.LVL10:
  91:Core/Src/main.c ****   MX_USART3_UART_Init();
 255              		.loc 1 91 3 view .LVU68
 256 000e FFF7FEFF 		bl	MX_SPI5_Init
 257              	.LVL11:
  92:Core/Src/main.c ****   MX_USB_OTG_FS_PCD_Init();
 258              		.loc 1 92 3 view .LVU69
 259 0012 FFF7FEFF 		bl	MX_USART3_UART_Init
 260              	.LVL12:
  93:Core/Src/main.c ****   MX_I2C1_Init();
 261              		.loc 1 93 3 view .LVU70
 262 0016 FFF7FEFF 		bl	MX_USB_OTG_FS_PCD_Init
 263              	.LVL13:
  94:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 264              		.loc 1 94 3 view .LVU71
 265 001a FFF7FEFF 		bl	MX_I2C1_Init
 266              	.LVL14:
  96:Core/Src/main.c ****   print_with_average(adc);
 267              		.loc 1 96 3 view .LVU72
  96:Core/Src/main.c ****   print_with_average(adc);
 268              		.loc 1 96 33 is_stmt 0 view .LVU73
 269 001e 0348     		ldr	r0, .L16
 270 0020 FFF7FEFF 		bl	init_adc
 271              	.LVL15:
  97:Core/Src/main.c **** 
 272              		.loc 1 97 3 is_stmt 1 view .LVU74
 273 0024 FFF7FEFF 		bl	print_with_average
 274              	.LVL16:
 275              	.L14:
 103:Core/Src/main.c **** 
 276              		.loc 1 103 3 discriminator 1 view .LVU75
 108:Core/Src/main.c ****   /* USER CODE END 3 */
 277              		.loc 1 108 3 discriminator 1 view .LVU76
 103:Core/Src/main.c **** 
 278              		.loc 1 103 9 discriminator 1 view .LVU77
 279 0028 FEE7     		b	.L14
 280              	.L17:
 281 002a 00BF     		.align	2
 282              	.L16:
 283 002c 00000000 		.word	hspi5
 284              		.cfi_endproc
 285              	.LFE146:
 287              		.text
 288              	.Letext0:
 289              		.file 3 "/usr/share/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/machine/_default_types.h"
 290              		.file 4 "/usr/share/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/sys/_stdint.h"
 291              		.file 5 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f746xx.h"
 292              		.file 6 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_def.h"
 293              		.file 7 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_rcc_ex.h"
 294              		.file 8 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_rcc.h"
 295              		.file 9 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_dma.h"
 296              		.file 10 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_spi.h"
 297              		.file 11 "fw-lib-stm32-BuildKit/adc-toolkit/max11254-spi/max11254_register.h"
 298              		.file 12 "fw-lib-stm32-BuildKit/adc-toolkit/max11254-spi/max11254.h"
 299              		.file 13 "fw-lib-stm32-CocktailOS/kernel/peripheral/cocktail_gpio.h"
ARM GAS  /tmp/ccXehhFx.s 			page 13


 300              		.file 14 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_pwr.h"
 301              		.file 15 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_pwr_ex.h"
 302              		.file 16 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal.h"
 303              		.file 17 "Core/Inc/gpio.h"
 304              		.file 18 "Core/Inc/spi.h"
 305              		.file 19 "Core/Inc/usart.h"
 306              		.file 20 "Core/Inc/usb_otg.h"
 307              		.file 21 "Core/Inc/i2c.h"
 308              		.file 22 "fw-lib-stm32-BuildKit/adc-toolkit/max11254-spi/examples/max11254_loadcell.h"
 309              		.file 23 "<built-in>"
ARM GAS  /tmp/ccXehhFx.s 			page 14


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccXehhFx.s:20     .text.Error_Handler:0000000000000000 $t
     /tmp/ccXehhFx.s:26     .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/ccXehhFx.s:59     .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccXehhFx.s:65     .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccXehhFx.s:223    .text.SystemClock_Config:00000000000000a8 $d
     /tmp/ccXehhFx.s:229    .text.main:0000000000000000 $t
     /tmp/ccXehhFx.s:235    .text.main:0000000000000000 main
     /tmp/ccXehhFx.s:283    .text.main:000000000000002c $d

UNDEFINED SYMBOLS
memset
HAL_PWR_EnableBkUpAccess
HAL_RCC_OscConfig
HAL_PWREx_EnableOverDrive
HAL_RCC_ClockConfig
HAL_Init
MX_GPIO_Init
MX_SPI5_Init
MX_USART3_UART_Init
MX_USB_OTG_FS_PCD_Init
MX_I2C1_Init
init_adc
print_with_average
hspi5
