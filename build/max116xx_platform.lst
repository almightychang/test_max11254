ARM GAS  /tmp/ccsREWp9.s 			page 1


   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv5-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"max116xx_platform.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.MAX116xx_isReadyFast,"ax",%progbits
  20              		.align	1
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	MAX116xx_isReadyFast:
  26              	.LVL0:
  27              	.LFB152:
  28              		.file 1 "fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c"
   1:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c **** #include "max116xx_platform.h"
   2:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c **** #include "max116xx.h"
   3:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c **** #include <stdlib.h>
   4:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c **** 
   5:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c **** HAL_StatusTypeDef
   6:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c **** MAX116xx_write_nowait(MAX116xx_HandleTypeDef *hchip, uint8_t *data, uint8_t len)
   7:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c **** {
   8:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c ****     return HAL_I2C_Master_Transmit(hchip->hi2c, hchip->addr << 1, data, len,
   9:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c ****                                    10);
  10:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c **** }
  11:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c **** 
  12:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c **** HAL_StatusTypeDef
  13:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c **** MAX116xx_write(MAX116xx_HandleTypeDef *hchip, uint8_t *data, uint8_t len)
  14:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c **** {
  15:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c ****     return HAL_I2C_Master_Transmit_IT(hchip->hi2c, hchip->addr << 1, data, len);
  16:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c **** }
  17:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c **** 
  18:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c **** HAL_StatusTypeDef
  19:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c **** MAX116xx_read(MAX116xx_HandleTypeDef *hchip, uint16_t *data, uint8_t len)
  20:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c **** {
  21:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c ****     return HAL_I2C_Master_Receive_IT(hchip->hi2c, hchip->addr << 1,
  22:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c ****                                      (uint8_t *)data, sizeof(uint16_t) * len);
  23:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c **** }
  24:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c **** 
  25:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c **** HAL_StatusTypeDef
  26:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c **** MAX116xx_read_nowait(MAX116xx_HandleTypeDef *hchip, uint16_t *data, uint8_t len)
  27:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c **** {
  28:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c ****     return HAL_I2C_Master_Receive(hchip->hi2c, hchip->addr << 1,
  29:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c ****                                   (uint8_t *)data, sizeof(uint16_t) * len, 10);
  30:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c **** }
ARM GAS  /tmp/ccsREWp9.s 			page 2


  31:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c **** 
  32:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c **** HAL_StatusTypeDef
  33:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c **** MAX116xx_program_nowait(MAX116xx_HandleTypeDef *hchip)
  34:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c **** {
  35:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c ****     return MAX116xx_write_nowait(hchip, (uint8_t *)&hchip->program, 2);
  36:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c **** }
  37:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c **** 
  38:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c **** HAL_StatusTypeDef
  39:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c **** MAX116xx_program(MAX116xx_HandleTypeDef *hchip)
  40:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c **** {
  41:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c ****     return MAX116xx_write(hchip, (uint8_t *)&hchip->program, 2);
  42:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c **** }
  43:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c **** 
  44:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c **** static bool
  45:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c **** MAX116xx_isReadyFast(MAX116xx_HandleTypeDef *hchip)
  46:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c **** {
  29              		.loc 1 46 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  47:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c ****     return hchip->hi2c->State == HAL_I2C_STATE_READY;
  34              		.loc 1 47 5 view .LVU1
  35              		.loc 1 47 17 is_stmt 0 view .LVU2
  36 0000 0368     		ldr	r3, [r0]
  37              		.loc 1 47 23 view .LVU3
  38 0002 93F84100 		ldrb	r0, [r3, #65]	@ zero_extendqisi2
  39              	.LVL1:
  40              		.loc 1 47 23 view .LVU4
  41 0006 C0B2     		uxtb	r0, r0
  48:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c **** }
  42              		.loc 1 48 1 view .LVU5
  43 0008 2028     		cmp	r0, #32
  44 000a 14BF     		ite	ne
  45 000c 0020     		movne	r0, #0
  46 000e 0120     		moveq	r0, #1
  47 0010 7047     		bx	lr
  48              		.cfi_endproc
  49              	.LFE152:
  51              		.section	.text.max116xx_response_task,"ax",%progbits
  52              		.align	1
  53              		.syntax unified
  54              		.thumb
  55              		.thumb_func
  57              	max116xx_response_task:
  58              	.LVL2:
  59              	.LFB153:
  49:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c **** 
  50:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c **** // TODO: move these tasks to preset related sources.
  51:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c **** static TASK_FN(max116xx_response_task)
  52:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c **** {
  60              		.loc 1 52 1 is_stmt 1 view -0
  61              		.cfi_startproc
  62              		@ args = 0, pretend = 0, frame = 0
  63              		@ frame_needed = 0, uses_anonymous_args = 0
  64              		@ link register save eliminated.
  65              		.loc 1 52 1 is_stmt 0 view .LVU7
ARM GAS  /tmp/ccsREWp9.s 			page 3


  66 0000 30B4     		push	{r4, r5}
  67              	.LCFI0:
  68              		.cfi_def_cfa_offset 8
  69              		.cfi_offset 4, -8
  70              		.cfi_offset 5, -4
  53:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c ****     MAX116xx_HandleTypeDef *hchip       = TASK_CTX(MAX116xx_HandleTypeDef);
  71              		.loc 1 53 5 is_stmt 1 view .LVU8
  72              		.loc 1 53 29 is_stmt 0 view .LVU9
  73 0002 4368     		ldr	r3, [r0, #4]
  74              	.LVL3:
  54:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c ****     MAX116xx_DriverTypeDef *driver      = hchip->driver;
  75              		.loc 1 54 5 is_stmt 1 view .LVU10
  76              		.loc 1 54 29 is_stmt 0 view .LVU11
  77 0004 9C68     		ldr	r4, [r3, #8]
  78              	.LVL4:
  55:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c ****     GenericADC_TypeDef     *adc_generic = driver->adc_generic;
  79              		.loc 1 55 5 is_stmt 1 view .LVU12
  80              		.loc 1 55 29 is_stmt 0 view .LVU13
  81 0006 2068     		ldr	r0, [r4]
  82              	.LVL5:
  56:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c ****     MUX_TypeDef            *mux         = adc_generic->adc_ctx;
  83              		.loc 1 56 5 is_stmt 1 view .LVU14
  84              		.loc 1 56 29 is_stmt 0 view .LVU15
  85 0008 C568     		ldr	r5, [r0, #12]
  86              	.LVL6:
  57:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c ****     float                   tmp;
  87              		.loc 1 57 5 is_stmt 1 view .LVU16
  58:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c **** 
  59:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c ****     tmp = 0;
  88              		.loc 1 59 5 view .LVU17
  60:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c ****     for(uint8_t i = 0; i < adc_generic->sample_size; i++)
  89              		.loc 1 60 5 view .LVU18
  90              	.LBB5:
  91              		.loc 1 60 9 view .LVU19
  92              		.loc 1 60 17 is_stmt 0 view .LVU20
  93 000a 0022     		movs	r2, #0
  94              	.LBE5:
  59:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c ****     for(uint8_t i = 0; i < adc_generic->sample_size; i++)
  95              		.loc 1 59 9 view .LVU21
  96 000c DFED116A 		vldr.32	s13, .L6
  97              	.LBB8:
  98              		.loc 1 60 5 view .LVU22
  99 0010 13E0     		b	.L3
 100              	.LVL7:
 101              	.L4:
  61:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c ****         tmp += (float)MAX116XX_UNIPOLAR_DATA(driver->sample[i]) /
 102              		.loc 1 61 9 is_stmt 1 discriminator 3 view .LVU23
 103              		.loc 1 61 23 is_stmt 0 discriminator 3 view .LVU24
 104 0012 A368     		ldr	r3, [r4, #8]
 105 0014 33F81230 		ldrh	r3, [r3, r2, lsl #1]
 106              	.LVL8:
 107              	.LBB6:
 108              	.LBI6:
 109              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
ARM GAS  /tmp/ccsREWp9.s 			page 4


   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  /tmp/ccsREWp9.s 			page 5


  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccsREWp9.s 			page 6


 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 143:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 144:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 145:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 146:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Control Register value
 150:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 151:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_CONTROL(void)
 152:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 154:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 156:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 157:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 158:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 159:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 160:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 161:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 162:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 164:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               non-secure Control Register value
 165:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_CONTROL_NS(void)
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 168:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 170:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 171:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccsREWp9.s 			page 7


 175:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 177:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register
 178:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 179:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 180:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_CONTROL(uint32_t control)
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 183:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 187:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 188:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 189:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 190:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 191:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 192:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 193:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_CONTROL_NS(uint32_t control)
 194:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 198:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 201:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 202:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               IPSR Register value
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 205:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_IPSR(void)
 206:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 207:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 210:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 211:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 212:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 213:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 214:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 215:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 216:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 217:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               APSR Register value
 218:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_APSR(void)
 220:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 221:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 222:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 223:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 224:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 225:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 226:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 227:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 228:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 229:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 230:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               xPSR Register value
ARM GAS  /tmp/ccsREWp9.s 			page 8


 232:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 233:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_xPSR(void)
 234:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 235:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 238:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 239:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 240:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 241:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 243:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 244:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 245:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 247:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSP(void)
 248:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 249:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 250:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 251:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 252:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 253:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 254:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 255:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 256:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 257:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 258:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 259:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 260:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 261:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 262:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSP_NS(void)
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 264:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 265:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 266:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 267:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 268:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 269:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 270:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 271:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 272:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 273:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 274:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 275:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 277:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSP(uint32_t topOfProcStack)
 278:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 279:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 281:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 282:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 283:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 284:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 285:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 286:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 287:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 288:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  /tmp/ccsREWp9.s 			page 9


 289:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 290:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 291:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 295:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 296:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 298:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 299:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 300:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 301:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSP(void)
 302:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 303:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 304:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 305:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 306:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 307:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 308:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 309:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 310:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 311:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 312:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 314:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 315:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 316:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSP_NS(void)
 317:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 318:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 319:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 320:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 321:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 322:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 323:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 324:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 325:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 326:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 327:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 328:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 329:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 330:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 331:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSP(uint32_t topOfMainStack)
 332:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 334:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 338:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 339:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 342:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 343:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 344:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 345:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
ARM GAS  /tmp/ccsREWp9.s 			page 10


 346:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 348:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 349:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 350:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 351:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 352:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Stack Pointer (non-secure)
 353:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Stack Pointer (SP) when in secure state.
 354:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               SP Register value
 355:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_SP_NS(void)
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 358:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 359:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 360:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, sp_ns" : "=r" (result) );
 361:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 362:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 363:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 364:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 365:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 366:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Stack Pointer (non-secure)
 367:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Stack Pointer (SP) when in secure state.
 368:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfStack  Stack Pointer value to set
 369:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 370:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_SP_NS(uint32_t topOfStack)
 371:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR sp_ns, %0" : : "r" (topOfStack) : );
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 375:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 378:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
 379:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 381:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 382:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 384:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 385:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 387:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 388:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 389:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 390:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 391:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 392:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 393:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 394:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 395:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 396:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 397:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PRIMASK_NS(void)
 398:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 399:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 400:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 401:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) :: "memory");
 402:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
ARM GAS  /tmp/ccsREWp9.s 			page 11


 403:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 405:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 406:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 407:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 408:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
 409:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 410:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 411:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 412:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
 413:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 415:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 416:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 417:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 418:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 419:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 420:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 421:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 422:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 423:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 424:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 425:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 426:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 427:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 428:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 429:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 430:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 431:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 432:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 433:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 434:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 435:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable FIQ
 436:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 437:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 438:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 439:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_fault_irq(void)
 440:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 441:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 442:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 443:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 444:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 445:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 446:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable FIQ
 447:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 448:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 449:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 450:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_fault_irq(void)
 451:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 452:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 453:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 454:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 455:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 456:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 457:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority
 458:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 459:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
ARM GAS  /tmp/ccsREWp9.s 			page 12


 460:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 461:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_BASEPRI(void)
 462:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 463:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 464:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 465:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 466:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 467:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 468:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 469:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 470:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 471:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 472:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 473:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 474:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 475:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 476:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_BASEPRI_NS(void)
 477:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 478:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 479:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 481:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 482:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 483:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 484:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 485:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 486:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 487:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority
 488:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 489:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 490:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 491:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI(uint32_t basePri)
 492:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 493:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 494:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 495:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 496:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 498:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 499:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
 500:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
 501:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 502:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 503:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 504:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 505:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
 506:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 507:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 508:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 509:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 510:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 511:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 512:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 513:Drivers/CMSIS/Include/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 514:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 515:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 516:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI_MAX(uint32_t basePri)
ARM GAS  /tmp/ccsREWp9.s 			page 13


 517:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 518:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 519:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 520:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 521:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 522:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 523:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask
 524:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 525:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 526:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 527:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FAULTMASK(void)
 528:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 529:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 530:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 532:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 533:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 534:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 535:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 536:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 537:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 538:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 539:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
 540:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 541:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 542:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 543:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 544:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 545:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 546:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
 547:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 548:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 549:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 550:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 551:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 552:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 553:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask
 554:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 555:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 556:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 557:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FAULTMASK(uint32_t faultMask)
 558:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 559:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 560:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 561:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 562:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 563:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 564:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 565:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 566:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
 567:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 568:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 569:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
 570:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 571:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 572:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 573:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  /tmp/ccsREWp9.s 			page 14


 574:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 575:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 576:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 577:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 578:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 579:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 580:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 581:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 582:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 583:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 584:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
 585:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 586:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 587:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 588:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 589:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 590:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 591:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 592:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSPLIM(void)
 593:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 594:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 595:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 596:Drivers/CMSIS/Include/cmsis_gcc.h ****     // without main extensions, the non-secure PSPLIM is RAZ/WI
 597:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 598:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 599:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 600:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 601:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 602:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 603:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 604:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 605:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3))
 606:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 607:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
 608:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 609:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 610:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 611:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 612:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 613:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 614:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSPLIM_NS(void)
 615:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 616:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 617:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 618:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 619:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 620:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 621:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
 622:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 623:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 624:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 625:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 626:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 627:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 628:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 629:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 630:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
ARM GAS  /tmp/ccsREWp9.s 			page 15


 631:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 632:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 633:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 634:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 635:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 636:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 637:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
 638:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 639:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 640:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 641:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 642:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 643:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 644:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
 645:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 646:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 647:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 648:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 649:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 650:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 651:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 652:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 653:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 654:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 655:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
 656:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 657:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 658:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
 659:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 660:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 661:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 662:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 663:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 664:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
 665:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 666:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 667:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 668:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 669:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 670:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 671:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
 672:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 673:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 674:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 675:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 676:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
 677:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 678:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 679:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSPLIM(void)
 680:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 681:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 682:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 683:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 684:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 685:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 686:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 687:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
ARM GAS  /tmp/ccsREWp9.s 			page 16


 688:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 689:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 690:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 691:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 692:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 693:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 694:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 695:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
 696:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 697:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 698:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 699:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 700:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 701:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 702:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSPLIM_NS(void)
 703:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 704:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 705:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 706:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 707:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 708:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 709:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 710:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 711:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 712:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 713:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 714:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 715:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 716:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 717:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
 718:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 719:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 720:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 721:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 722:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
 723:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
 724:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 725:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 726:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 727:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 728:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 729:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 730:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 731:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 732:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
 733:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 734:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 735:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 736:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 737:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 738:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 739:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 740:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 741:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 742:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 743:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 744:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
ARM GAS  /tmp/ccsREWp9.s 			page 17


 745:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 746:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 747:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 748:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 749:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 750:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 751:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 752:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
 753:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 754:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 755:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 756:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 757:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 758:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 759:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 760:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 761:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 762:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get FPSCR
 763:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 764:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 765:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 766:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FPSCR(void)
 767:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 768:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 769:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 770:Drivers/CMSIS/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_get_fpscr) 
 771:Drivers/CMSIS/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 772:Drivers/CMSIS/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 773:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 774:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_arm_get_fpscr();
 775:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 776:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 777:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 778:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 779:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 780:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 781:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 782:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(0U);
 783:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 784:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 785:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 786:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 787:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 788:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set FPSCR
 789:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 790:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 791:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 792:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FPSCR(uint32_t fpscr)
 793:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 794:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 795:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 796:Drivers/CMSIS/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_set_fpscr)
 797:Drivers/CMSIS/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 798:Drivers/CMSIS/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 799:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 800:Drivers/CMSIS/Include/cmsis_gcc.h ****   __builtin_arm_set_fpscr(fpscr);
 801:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
ARM GAS  /tmp/ccsREWp9.s 			page 18


 802:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc", "memory");
 803:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 804:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 805:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)fpscr;
 806:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 807:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 808:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 809:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 810:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 811:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 812:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 813:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 814:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 815:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 816:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 817:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 818:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 819:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 820:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 821:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 822:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 823:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 824:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 825:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 826:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 827:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 828:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 829:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 830:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 831:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 832:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 833:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 834:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 835:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 836:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 837:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 838:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 839:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 840:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 841:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 842:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi")
 843:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 844:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 845:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 846:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 847:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 848:Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 849:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe")
 851:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 853:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 854:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 855:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 856:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 857:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 858:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccsREWp9.s 			page 19


 859:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 860:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 861:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 862:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 863:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 864:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 865:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 866:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 867:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 868:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 869:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 870:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 871:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 872:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 873:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 874:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 875:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 876:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 877:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 878:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 879:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 880:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 881:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 882:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 883:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 884:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 885:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 886:Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 887:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 888:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 889:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 890:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 891:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 892:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 893:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 894:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 895:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 896:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 897:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 898:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 899:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 900:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 901:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 902:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 903:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 904:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 905:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 906:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 907:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 908:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 909:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 910:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 911:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 912:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 913:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 914:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 915:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
ARM GAS  /tmp/ccsREWp9.s 			page 20


 916:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 917:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 918:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 919:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 110              		.loc 2 919 31 is_stmt 1 discriminator 3 view .LVU25
 111              	.LBB7:
 920:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 921:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 112              		.loc 2 921 3 discriminator 3 view .LVU26
 922:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 923:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 113              		.loc 2 923 3 discriminator 3 view .LVU27
 114              		.syntax unified
 115              	@ 923 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 116 0018 5BBA     		rev16 r3, r3
 117              	@ 0 "" 2
 118              	.LVL9:
 924:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 119              		.loc 2 924 3 discriminator 3 view .LVU28
 120              		.loc 2 924 3 is_stmt 0 discriminator 3 view .LVU29
 121              		.thumb
 122              		.syntax unified
 123              	.LBE7:
 124              	.LBE6:
 125              		.loc 1 61 23 discriminator 3 view .LVU30
 126 001a C3F30B03 		ubfx	r3, r3, #0, #12
 127              		.loc 1 61 16 discriminator 3 view .LVU31
 128 001e 07EE903A 		vmov	s15, r3	@ int
 129 0022 F8EE677A 		vcvt.f32.u32	s15, s15
 130              		.loc 1 61 65 discriminator 3 view .LVU32
 131 0026 07EE101A 		vmov	s14, r1	@ int
 132 002a B8EEC77A 		vcvt.f32.s32	s14, s14
 133 002e 87EE876A 		vdiv.f32	s12, s15, s14
 134              		.loc 1 61 13 discriminator 3 view .LVU33
 135 0032 76EE866A 		vadd.f32	s13, s13, s12
 136              	.LVL10:
  60:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c ****         tmp += (float)MAX116XX_UNIPOLAR_DATA(driver->sample[i]) /
 137              		.loc 1 60 54 is_stmt 1 discriminator 3 view .LVU34
  60:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c ****         tmp += (float)MAX116XX_UNIPOLAR_DATA(driver->sample[i]) /
 138              		.loc 1 60 55 is_stmt 0 discriminator 3 view .LVU35
 139 0036 0132     		adds	r2, r2, #1
 140              	.LVL11:
  60:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c ****         tmp += (float)MAX116XX_UNIPOLAR_DATA(driver->sample[i]) /
 141              		.loc 1 60 55 discriminator 3 view .LVU36
 142 0038 D2B2     		uxtb	r2, r2
 143              	.LVL12:
 144              	.L3:
  60:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c ****         tmp += (float)MAX116XX_UNIPOLAR_DATA(driver->sample[i]) /
 145              		.loc 1 60 24 is_stmt 1 discriminator 1 view .LVU37
  60:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c ****         tmp += (float)MAX116XX_UNIPOLAR_DATA(driver->sample[i]) /
 146              		.loc 1 60 39 is_stmt 0 discriminator 1 view .LVU38
 147 003a 0179     		ldrb	r1, [r0, #4]	@ zero_extendqisi2
  60:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c ****         tmp += (float)MAX116XX_UNIPOLAR_DATA(driver->sample[i]) /
 148              		.loc 1 60 5 discriminator 1 view .LVU39
 149 003c 9142     		cmp	r1, r2
 150 003e E8D8     		bhi	.L4
 151              	.LBE8:
ARM GAS  /tmp/ccsREWp9.s 			page 21


  62:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c ****                adc_generic->sample_size;
  63:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c ****     adc_generic->interface[mux->rank].adc_value = tmp;
 152              		.loc 1 63 5 is_stmt 1 view .LVU40
 153              		.loc 1 63 16 is_stmt 0 view .LVU41
 154 0040 0268     		ldr	r2, [r0]
 155              	.LVL13:
 156              		.loc 1 63 31 view .LVU42
 157 0042 6B79     		ldrb	r3, [r5, #5]	@ zero_extendqisi2
 158              		.loc 1 63 27 view .LVU43
 159 0044 03EB4303 		add	r3, r3, r3, lsl #1
 160 0048 02EB8303 		add	r3, r2, r3, lsl #2
 161              		.loc 1 63 49 view .LVU44
 162 004c C3ED016A 		vstr.32	s13, [r3, #4]
 163              	.LVL14:
  64:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c **** }
 164              		.loc 1 64 1 view .LVU45
 165 0050 30BC     		pop	{r4, r5}
 166              	.LCFI1:
 167              		.cfi_restore 5
 168              		.cfi_restore 4
 169              		.cfi_def_cfa_offset 0
 170              	.LVL15:
 171              		.loc 1 64 1 view .LVU46
 172 0052 7047     		bx	lr
 173              	.L7:
 174              		.align	2
 175              	.L6:
 176 0054 00000000 		.word	0
 177              		.cfi_endproc
 178              	.LFE153:
 180              		.section	.text.max116xx_init_request_task,"ax",%progbits
 181              		.align	1
 182              		.syntax unified
 183              		.thumb
 184              		.thumb_func
 186              	max116xx_init_request_task:
 187              	.LVL16:
 188              	.LFB155:
  65:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c **** 
  66:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c **** static TASK_FN(max116xx_request_task)
  67:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c **** {
  68:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c ****     MAX116xx_HandleTypeDef *hchip       = TASK_CTX(MAX116xx_HandleTypeDef);
  69:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c ****     MAX116xx_DriverTypeDef *driver      = hchip->driver;
  70:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c ****     GenericADC_TypeDef     *adc_generic = driver->adc_generic;
  71:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c **** 
  72:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c ****     MAX116xx_read(hchip, driver->sample, adc_generic->sample_size);
  73:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c **** }
  74:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c **** 
  75:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c **** static TASK_FN(max116xx_init_request_task)
  76:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c **** {
 189              		.loc 1 76 1 is_stmt 1 view -0
 190              		.cfi_startproc
 191              		@ args = 0, pretend = 0, frame = 0
 192              		@ frame_needed = 0, uses_anonymous_args = 0
 193              		.loc 1 76 1 is_stmt 0 view .LVU48
 194 0000 70B5     		push	{r4, r5, r6, lr}
 195              	.LCFI2:
ARM GAS  /tmp/ccsREWp9.s 			page 22


 196              		.cfi_def_cfa_offset 16
 197              		.cfi_offset 4, -16
 198              		.cfi_offset 5, -12
 199              		.cfi_offset 6, -8
 200              		.cfi_offset 14, -4
 201 0002 0446     		mov	r4, r0
  77:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c ****     MAX116xx_HandleTypeDef *hchip  = TASK_CTX(MAX116xx_HandleTypeDef);
 202              		.loc 1 77 5 is_stmt 1 view .LVU49
 203              		.loc 1 77 29 is_stmt 0 view .LVU50
 204 0004 4568     		ldr	r5, [r0, #4]
 205              	.LVL17:
  78:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c ****     MAX116xx_DriverTypeDef *driver = hchip->driver;
 206              		.loc 1 78 5 is_stmt 1 view .LVU51
 207              		.loc 1 78 29 is_stmt 0 view .LVU52
 208 0006 AE68     		ldr	r6, [r5, #8]
 209              	.LVL18:
  79:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c **** 
  80:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c ****     if(!MAX116xx_isReadyFast(hchip)) return;
 210              		.loc 1 80 5 is_stmt 1 view .LVU53
 211              		.loc 1 80 9 is_stmt 0 view .LVU54
 212 0008 2846     		mov	r0, r5
 213              	.LVL19:
 214              		.loc 1 80 9 view .LVU55
 215 000a FFF7FEFF 		bl	MAX116xx_isReadyFast
 216              	.LVL20:
 217              		.loc 1 80 7 view .LVU56
 218 000e 00B9     		cbnz	r0, .L13
 219              	.L8:
  81:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c **** 
  82:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c ****     SET_NEXT_TASK(NEW_TASK(driver->sched_id, max116xx_response_task, hchip));
  83:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c ****     SET_NEXT_TASK(NEW_TASK(COCKTAIL_POLLING_ID, max116xx_request_task, hchip));
  84:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c **** }
 220              		.loc 1 84 1 view .LVU57
 221 0010 70BD     		pop	{r4, r5, r6, pc}
 222              	.LVL21:
 223              	.L13:
  82:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c ****     SET_NEXT_TASK(NEW_TASK(COCKTAIL_POLLING_ID, max116xx_request_task, hchip));
 224              		.loc 1 82 5 is_stmt 1 view .LVU58
 225              	.LBB9:
  82:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c ****     SET_NEXT_TASK(NEW_TASK(COCKTAIL_POLLING_ID, max116xx_request_task, hchip));
 226              		.loc 1 82 5 view .LVU59
 227 0012 2A46     		mov	r2, r5
 228 0014 1149     		ldr	r1, .L16
 229 0016 3079     		ldrb	r0, [r6, #4]	@ zero_extendqisi2
 230 0018 FFF7FEFF 		bl	Cocktail_newTask
 231              	.LVL22:
  82:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c ****     SET_NEXT_TASK(NEW_TASK(COCKTAIL_POLLING_ID, max116xx_request_task, hchip));
 232              		.loc 1 82 5 view .LVU60
 233              	.LBB10:
  82:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c ****     SET_NEXT_TASK(NEW_TASK(COCKTAIL_POLLING_ID, max116xx_request_task, hchip));
 234              		.loc 1 82 5 view .LVU61
  82:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c ****     SET_NEXT_TASK(NEW_TASK(COCKTAIL_POLLING_ID, max116xx_request_task, hchip));
 235              		.loc 1 82 5 view .LVU62
  82:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c ****     SET_NEXT_TASK(NEW_TASK(COCKTAIL_POLLING_ID, max116xx_request_task, hchip));
 236              		.loc 1 82 5 view .LVU63
 237 001c E368     		ldr	r3, [r4, #12]
 238 001e DB68     		ldr	r3, [r3, #12]
ARM GAS  /tmp/ccsREWp9.s 			page 23


 239 0020 0361     		str	r3, [r0, #16]
 240 0022 8BB1     		cbz	r3, .L14
 241              	.L10:
  82:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c ****     SET_NEXT_TASK(NEW_TASK(COCKTAIL_POLLING_ID, max116xx_request_task, hchip));
 242              		.loc 1 82 5 discriminator 3 view .LVU64
 243 0024 E368     		ldr	r3, [r4, #12]
 244 0026 D860     		str	r0, [r3, #12]
  82:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c ****     SET_NEXT_TASK(NEW_TASK(COCKTAIL_POLLING_ID, max116xx_request_task, hchip));
 245              		.loc 1 82 5 discriminator 3 view .LVU65
 246              	.LBE10:
  82:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c ****     SET_NEXT_TASK(NEW_TASK(COCKTAIL_POLLING_ID, max116xx_request_task, hchip));
 247              		.loc 1 82 5 discriminator 3 view .LVU66
  82:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c ****     SET_NEXT_TASK(NEW_TASK(COCKTAIL_POLLING_ID, max116xx_request_task, hchip));
 248              		.loc 1 82 5 discriminator 3 view .LVU67
 249 0028 E368     		ldr	r3, [r4, #12]
 250 002a C360     		str	r3, [r0, #12]
 251              	.LBE9:
  82:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c ****     SET_NEXT_TASK(NEW_TASK(COCKTAIL_POLLING_ID, max116xx_request_task, hchip));
 252              		.loc 1 82 5 discriminator 3 view .LVU68
  83:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c **** }
 253              		.loc 1 83 5 discriminator 3 view .LVU69
 254              	.LBB12:
  83:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c **** }
 255              		.loc 1 83 5 discriminator 3 view .LVU70
 256 002c 2A46     		mov	r2, r5
 257 002e 0C49     		ldr	r1, .L16+4
 258 0030 0020     		movs	r0, #0
 259              	.LVL23:
  83:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c **** }
 260              		.loc 1 83 5 is_stmt 0 discriminator 3 view .LVU71
 261 0032 FFF7FEFF 		bl	Cocktail_newTask
 262              	.LVL24:
  83:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c **** }
 263              		.loc 1 83 5 is_stmt 1 discriminator 3 view .LVU72
 264              	.LBB13:
  83:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c **** }
 265              		.loc 1 83 5 discriminator 3 view .LVU73
  83:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c **** }
 266              		.loc 1 83 5 discriminator 3 view .LVU74
  83:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c **** }
 267              		.loc 1 83 5 discriminator 3 view .LVU75
 268 0036 E368     		ldr	r3, [r4, #12]
 269 0038 DB68     		ldr	r3, [r3, #12]
 270 003a 0361     		str	r3, [r0, #16]
 271 003c 4BB1     		cbz	r3, .L15
 272              	.L11:
  83:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c **** }
 273              		.loc 1 83 5 discriminator 3 view .LVU76
 274 003e E368     		ldr	r3, [r4, #12]
 275 0040 D860     		str	r0, [r3, #12]
  83:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c **** }
 276              		.loc 1 83 5 discriminator 3 view .LVU77
 277              	.LBE13:
  83:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c **** }
 278              		.loc 1 83 5 discriminator 3 view .LVU78
  83:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c **** }
 279              		.loc 1 83 5 discriminator 3 view .LVU79
ARM GAS  /tmp/ccsREWp9.s 			page 24


 280 0042 E368     		ldr	r3, [r4, #12]
 281 0044 C360     		str	r3, [r0, #12]
 282              	.LBE12:
  83:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c **** }
 283              		.loc 1 83 5 discriminator 3 view .LVU80
 284 0046 E3E7     		b	.L8
 285              	.LVL25:
 286              	.L14:
 287              	.LBB15:
 288              	.LBB11:
  82:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c ****     SET_NEXT_TASK(NEW_TASK(COCKTAIL_POLLING_ID, max116xx_request_task, hchip));
 289              		.loc 1 82 5 discriminator 1 view .LVU81
 290 0048 E368     		ldr	r3, [r4, #12]
 291 004a 00F11002 		add	r2, r0, #16
 292 004e 1A61     		str	r2, [r3, #16]
 293 0050 E8E7     		b	.L10
 294              	.LVL26:
 295              	.L15:
  82:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c ****     SET_NEXT_TASK(NEW_TASK(COCKTAIL_POLLING_ID, max116xx_request_task, hchip));
 296              		.loc 1 82 5 is_stmt 0 discriminator 1 view .LVU82
 297              	.LBE11:
 298              	.LBE15:
 299              	.LBB16:
 300              	.LBB14:
  83:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c **** }
 301              		.loc 1 83 5 is_stmt 1 discriminator 1 view .LVU83
 302 0052 E368     		ldr	r3, [r4, #12]
 303 0054 00F11002 		add	r2, r0, #16
 304 0058 1A61     		str	r2, [r3, #16]
 305 005a F0E7     		b	.L11
 306              	.L17:
 307              		.align	2
 308              	.L16:
 309 005c 00000000 		.word	max116xx_response_task
 310 0060 00000000 		.word	max116xx_request_task
 311              	.LBE14:
 312              	.LBE16:
 313              		.cfi_endproc
 314              	.LFE155:
 316              		.section	.text.MAX116xx_write_nowait,"ax",%progbits
 317              		.align	1
 318              		.global	MAX116xx_write_nowait
 319              		.syntax unified
 320              		.thumb
 321              		.thumb_func
 323              	MAX116xx_write_nowait:
 324              	.LVL27:
 325              	.LFB146:
   7:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c ****     return HAL_I2C_Master_Transmit(hchip->hi2c, hchip->addr << 1, data, len,
 326              		.loc 1 7 1 view -0
 327              		.cfi_startproc
 328              		@ args = 0, pretend = 0, frame = 0
 329              		@ frame_needed = 0, uses_anonymous_args = 0
   7:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c ****     return HAL_I2C_Master_Transmit(hchip->hi2c, hchip->addr << 1, data, len,
 330              		.loc 1 7 1 is_stmt 0 view .LVU85
 331 0000 00B5     		push	{lr}
 332              	.LCFI3:
ARM GAS  /tmp/ccsREWp9.s 			page 25


 333              		.cfi_def_cfa_offset 4
 334              		.cfi_offset 14, -4
 335 0002 83B0     		sub	sp, sp, #12
 336              	.LCFI4:
 337              		.cfi_def_cfa_offset 16
 338 0004 1346     		mov	r3, r2
   8:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c ****                                    10);
 339              		.loc 1 8 5 is_stmt 1 view .LVU86
   8:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c ****                                    10);
 340              		.loc 1 8 54 is_stmt 0 view .LVU87
 341 0006 90F804C0 		ldrb	ip, [r0, #4]	@ zero_extendqisi2
   8:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c ****                                    10);
 342              		.loc 1 8 12 view .LVU88
 343 000a 0A22     		movs	r2, #10
 344              	.LVL28:
   8:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c ****                                    10);
 345              		.loc 1 8 12 view .LVU89
 346 000c 0092     		str	r2, [sp]
 347 000e 0A46     		mov	r2, r1
 348 0010 4FEA4C01 		lsl	r1, ip, #1
 349              	.LVL29:
   8:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c ****                                    10);
 350              		.loc 1 8 12 view .LVU90
 351 0014 0068     		ldr	r0, [r0]
 352              	.LVL30:
   8:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c ****                                    10);
 353              		.loc 1 8 12 view .LVU91
 354 0016 FFF7FEFF 		bl	HAL_I2C_Master_Transmit
 355              	.LVL31:
  10:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c **** 
 356              		.loc 1 10 1 view .LVU92
 357 001a 03B0     		add	sp, sp, #12
 358              	.LCFI5:
 359              		.cfi_def_cfa_offset 4
 360              		@ sp needed
 361 001c 5DF804FB 		ldr	pc, [sp], #4
 362              		.cfi_endproc
 363              	.LFE146:
 365              		.section	.text.MAX116xx_write,"ax",%progbits
 366              		.align	1
 367              		.global	MAX116xx_write
 368              		.syntax unified
 369              		.thumb
 370              		.thumb_func
 372              	MAX116xx_write:
 373              	.LVL32:
 374              	.LFB147:
  14:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c ****     return HAL_I2C_Master_Transmit_IT(hchip->hi2c, hchip->addr << 1, data, len);
 375              		.loc 1 14 1 is_stmt 1 view -0
 376              		.cfi_startproc
 377              		@ args = 0, pretend = 0, frame = 0
 378              		@ frame_needed = 0, uses_anonymous_args = 0
  14:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c ****     return HAL_I2C_Master_Transmit_IT(hchip->hi2c, hchip->addr << 1, data, len);
 379              		.loc 1 14 1 is_stmt 0 view .LVU94
 380 0000 08B5     		push	{r3, lr}
 381              	.LCFI6:
 382              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/ccsREWp9.s 			page 26


 383              		.cfi_offset 3, -8
 384              		.cfi_offset 14, -4
 385 0002 1346     		mov	r3, r2
  15:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c **** }
 386              		.loc 1 15 5 is_stmt 1 view .LVU95
  15:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c **** }
 387              		.loc 1 15 57 is_stmt 0 view .LVU96
 388 0004 90F804C0 		ldrb	ip, [r0, #4]	@ zero_extendqisi2
  15:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c **** }
 389              		.loc 1 15 12 view .LVU97
 390 0008 0A46     		mov	r2, r1
 391              	.LVL33:
  15:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c **** }
 392              		.loc 1 15 12 view .LVU98
 393 000a 4FEA4C01 		lsl	r1, ip, #1
 394              	.LVL34:
  15:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c **** }
 395              		.loc 1 15 12 view .LVU99
 396 000e 0068     		ldr	r0, [r0]
 397              	.LVL35:
  15:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c **** }
 398              		.loc 1 15 12 view .LVU100
 399 0010 FFF7FEFF 		bl	HAL_I2C_Master_Transmit_IT
 400              	.LVL36:
  16:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c **** 
 401              		.loc 1 16 1 view .LVU101
 402 0014 08BD     		pop	{r3, pc}
 403              		.cfi_endproc
 404              	.LFE147:
 406              		.section	.text.MAX116xx_read,"ax",%progbits
 407              		.align	1
 408              		.global	MAX116xx_read
 409              		.syntax unified
 410              		.thumb
 411              		.thumb_func
 413              	MAX116xx_read:
 414              	.LVL37:
 415              	.LFB148:
  20:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c ****     return HAL_I2C_Master_Receive_IT(hchip->hi2c, hchip->addr << 1,
 416              		.loc 1 20 1 is_stmt 1 view -0
 417              		.cfi_startproc
 418              		@ args = 0, pretend = 0, frame = 0
 419              		@ frame_needed = 0, uses_anonymous_args = 0
  20:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c ****     return HAL_I2C_Master_Receive_IT(hchip->hi2c, hchip->addr << 1,
 420              		.loc 1 20 1 is_stmt 0 view .LVU103
 421 0000 08B5     		push	{r3, lr}
 422              	.LCFI7:
 423              		.cfi_def_cfa_offset 8
 424              		.cfi_offset 3, -8
 425              		.cfi_offset 14, -4
  21:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c ****                                      (uint8_t *)data, sizeof(uint16_t) * len);
 426              		.loc 1 21 5 is_stmt 1 view .LVU104
  21:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c ****                                      (uint8_t *)data, sizeof(uint16_t) * len);
 427              		.loc 1 21 56 is_stmt 0 view .LVU105
 428 0002 90F804C0 		ldrb	ip, [r0, #4]	@ zero_extendqisi2
  21:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c ****                                      (uint8_t *)data, sizeof(uint16_t) * len);
 429              		.loc 1 21 12 view .LVU106
ARM GAS  /tmp/ccsREWp9.s 			page 27


 430 0006 5300     		lsls	r3, r2, #1
 431 0008 0A46     		mov	r2, r1
 432              	.LVL38:
  21:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c ****                                      (uint8_t *)data, sizeof(uint16_t) * len);
 433              		.loc 1 21 12 view .LVU107
 434 000a 4FEA4C01 		lsl	r1, ip, #1
 435              	.LVL39:
  21:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c ****                                      (uint8_t *)data, sizeof(uint16_t) * len);
 436              		.loc 1 21 12 view .LVU108
 437 000e 0068     		ldr	r0, [r0]
 438              	.LVL40:
  21:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c ****                                      (uint8_t *)data, sizeof(uint16_t) * len);
 439              		.loc 1 21 12 view .LVU109
 440 0010 FFF7FEFF 		bl	HAL_I2C_Master_Receive_IT
 441              	.LVL41:
  23:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c **** 
 442              		.loc 1 23 1 view .LVU110
 443 0014 08BD     		pop	{r3, pc}
 444              		.cfi_endproc
 445              	.LFE148:
 447              		.section	.text.max116xx_request_task,"ax",%progbits
 448              		.align	1
 449              		.syntax unified
 450              		.thumb
 451              		.thumb_func
 453              	max116xx_request_task:
 454              	.LVL42:
 455              	.LFB154:
  67:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c ****     MAX116xx_HandleTypeDef *hchip       = TASK_CTX(MAX116xx_HandleTypeDef);
 456              		.loc 1 67 1 is_stmt 1 view -0
 457              		.cfi_startproc
 458              		@ args = 0, pretend = 0, frame = 0
 459              		@ frame_needed = 0, uses_anonymous_args = 0
  67:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c ****     MAX116xx_HandleTypeDef *hchip       = TASK_CTX(MAX116xx_HandleTypeDef);
 460              		.loc 1 67 1 is_stmt 0 view .LVU112
 461 0000 08B5     		push	{r3, lr}
 462              	.LCFI8:
 463              		.cfi_def_cfa_offset 8
 464              		.cfi_offset 3, -8
 465              		.cfi_offset 14, -4
  68:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c ****     MAX116xx_DriverTypeDef *driver      = hchip->driver;
 466              		.loc 1 68 5 is_stmt 1 view .LVU113
  68:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c ****     MAX116xx_DriverTypeDef *driver      = hchip->driver;
 467              		.loc 1 68 29 is_stmt 0 view .LVU114
 468 0002 4068     		ldr	r0, [r0, #4]
 469              	.LVL43:
  69:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c ****     GenericADC_TypeDef     *adc_generic = driver->adc_generic;
 470              		.loc 1 69 5 is_stmt 1 view .LVU115
  69:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c ****     GenericADC_TypeDef     *adc_generic = driver->adc_generic;
 471              		.loc 1 69 29 is_stmt 0 view .LVU116
 472 0004 8368     		ldr	r3, [r0, #8]
 473              	.LVL44:
  70:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c **** 
 474              		.loc 1 70 5 is_stmt 1 view .LVU117
  70:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c **** 
 475              		.loc 1 70 29 is_stmt 0 view .LVU118
 476 0006 1A68     		ldr	r2, [r3]
ARM GAS  /tmp/ccsREWp9.s 			page 28


 477              	.LVL45:
  72:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c **** }
 478              		.loc 1 72 5 is_stmt 1 view .LVU119
 479 0008 1279     		ldrb	r2, [r2, #4]	@ zero_extendqisi2
 480              	.LVL46:
  72:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c **** }
 481              		.loc 1 72 5 is_stmt 0 view .LVU120
 482 000a 9968     		ldr	r1, [r3, #8]
 483 000c FFF7FEFF 		bl	MAX116xx_read
 484              	.LVL47:
  73:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c **** 
 485              		.loc 1 73 1 view .LVU121
 486 0010 08BD     		pop	{r3, pc}
 487              		.cfi_endproc
 488              	.LFE154:
 490              		.section	.text.MAX116xx_read_nowait,"ax",%progbits
 491              		.align	1
 492              		.global	MAX116xx_read_nowait
 493              		.syntax unified
 494              		.thumb
 495              		.thumb_func
 497              	MAX116xx_read_nowait:
 498              	.LVL48:
 499              	.LFB149:
  27:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c ****     return HAL_I2C_Master_Receive(hchip->hi2c, hchip->addr << 1,
 500              		.loc 1 27 1 is_stmt 1 view -0
 501              		.cfi_startproc
 502              		@ args = 0, pretend = 0, frame = 0
 503              		@ frame_needed = 0, uses_anonymous_args = 0
  27:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c ****     return HAL_I2C_Master_Receive(hchip->hi2c, hchip->addr << 1,
 504              		.loc 1 27 1 is_stmt 0 view .LVU123
 505 0000 00B5     		push	{lr}
 506              	.LCFI9:
 507              		.cfi_def_cfa_offset 4
 508              		.cfi_offset 14, -4
 509 0002 83B0     		sub	sp, sp, #12
 510              	.LCFI10:
 511              		.cfi_def_cfa_offset 16
  28:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c ****                                   (uint8_t *)data, sizeof(uint16_t) * len, 10);
 512              		.loc 1 28 5 is_stmt 1 view .LVU124
  28:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c ****                                   (uint8_t *)data, sizeof(uint16_t) * len, 10);
 513              		.loc 1 28 53 is_stmt 0 view .LVU125
 514 0004 90F804C0 		ldrb	ip, [r0, #4]	@ zero_extendqisi2
  28:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c ****                                   (uint8_t *)data, sizeof(uint16_t) * len, 10);
 515              		.loc 1 28 12 view .LVU126
 516 0008 0A23     		movs	r3, #10
 517 000a 0093     		str	r3, [sp]
 518 000c 5300     		lsls	r3, r2, #1
 519 000e 0A46     		mov	r2, r1
 520              	.LVL49:
  28:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c ****                                   (uint8_t *)data, sizeof(uint16_t) * len, 10);
 521              		.loc 1 28 12 view .LVU127
 522 0010 4FEA4C01 		lsl	r1, ip, #1
 523              	.LVL50:
  28:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c ****                                   (uint8_t *)data, sizeof(uint16_t) * len, 10);
 524              		.loc 1 28 12 view .LVU128
 525 0014 0068     		ldr	r0, [r0]
ARM GAS  /tmp/ccsREWp9.s 			page 29


 526              	.LVL51:
  28:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c ****                                   (uint8_t *)data, sizeof(uint16_t) * len, 10);
 527              		.loc 1 28 12 view .LVU129
 528 0016 FFF7FEFF 		bl	HAL_I2C_Master_Receive
 529              	.LVL52:
  30:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c **** 
 530              		.loc 1 30 1 view .LVU130
 531 001a 03B0     		add	sp, sp, #12
 532              	.LCFI11:
 533              		.cfi_def_cfa_offset 4
 534              		@ sp needed
 535 001c 5DF804FB 		ldr	pc, [sp], #4
 536              		.cfi_endproc
 537              	.LFE149:
 539              		.section	.text.MAX116xx_program_nowait,"ax",%progbits
 540              		.align	1
 541              		.global	MAX116xx_program_nowait
 542              		.syntax unified
 543              		.thumb
 544              		.thumb_func
 546              	MAX116xx_program_nowait:
 547              	.LVL53:
 548              	.LFB150:
  34:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c ****     return MAX116xx_write_nowait(hchip, (uint8_t *)&hchip->program, 2);
 549              		.loc 1 34 1 is_stmt 1 view -0
 550              		.cfi_startproc
 551              		@ args = 0, pretend = 0, frame = 0
 552              		@ frame_needed = 0, uses_anonymous_args = 0
  34:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c ****     return MAX116xx_write_nowait(hchip, (uint8_t *)&hchip->program, 2);
 553              		.loc 1 34 1 is_stmt 0 view .LVU132
 554 0000 08B5     		push	{r3, lr}
 555              	.LCFI12:
 556              		.cfi_def_cfa_offset 8
 557              		.cfi_offset 3, -8
 558              		.cfi_offset 14, -4
  35:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c **** }
 559              		.loc 1 35 5 is_stmt 1 view .LVU133
  35:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c **** }
 560              		.loc 1 35 12 is_stmt 0 view .LVU134
 561 0002 0222     		movs	r2, #2
 562 0004 411D     		adds	r1, r0, #5
 563 0006 FFF7FEFF 		bl	MAX116xx_write_nowait
 564              	.LVL54:
  36:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c **** 
 565              		.loc 1 36 1 view .LVU135
 566 000a 08BD     		pop	{r3, pc}
 567              		.cfi_endproc
 568              	.LFE150:
 570              		.section	.text.MAX116xx_program,"ax",%progbits
 571              		.align	1
 572              		.global	MAX116xx_program
 573              		.syntax unified
 574              		.thumb
 575              		.thumb_func
 577              	MAX116xx_program:
 578              	.LVL55:
 579              	.LFB151:
ARM GAS  /tmp/ccsREWp9.s 			page 30


  40:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c ****     return MAX116xx_write(hchip, (uint8_t *)&hchip->program, 2);
 580              		.loc 1 40 1 is_stmt 1 view -0
 581              		.cfi_startproc
 582              		@ args = 0, pretend = 0, frame = 0
 583              		@ frame_needed = 0, uses_anonymous_args = 0
  40:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c ****     return MAX116xx_write(hchip, (uint8_t *)&hchip->program, 2);
 584              		.loc 1 40 1 is_stmt 0 view .LVU137
 585 0000 08B5     		push	{r3, lr}
 586              	.LCFI13:
 587              		.cfi_def_cfa_offset 8
 588              		.cfi_offset 3, -8
 589              		.cfi_offset 14, -4
  41:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c **** }
 590              		.loc 1 41 5 is_stmt 1 view .LVU138
  41:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c **** }
 591              		.loc 1 41 12 is_stmt 0 view .LVU139
 592 0002 0222     		movs	r2, #2
 593 0004 411D     		adds	r1, r0, #5
 594 0006 FFF7FEFF 		bl	MAX116xx_write
 595              	.LVL56:
  42:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c **** 
 596              		.loc 1 42 1 view .LVU140
 597 000a 08BD     		pop	{r3, pc}
 598              		.cfi_endproc
 599              	.LFE151:
 601              		.section	.text.MAX116xx_getInterface,"ax",%progbits
 602              		.align	1
 603              		.global	MAX116xx_getInterface
 604              		.syntax unified
 605              		.thumb
 606              		.thumb_func
 608              	MAX116xx_getInterface:
 609              	.LVL57:
 610              	.LFB156:
  85:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c **** 
  86:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c **** GenericADC_ItfTypeDef *
  87:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c **** MAX116xx_getInterface(MAX116xx_HandleTypeDef *hchip, enum SchedulerID sched_id,
  88:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c ****                       GenericADC_InitTypeDef Init, MUX_TypeDef *mux)
  89:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c **** {
 611              		.loc 1 89 1 is_stmt 1 view -0
 612              		.cfi_startproc
 613              		@ args = 24, pretend = 8, frame = 0
 614              		@ frame_needed = 0, uses_anonymous_args = 0
 615              		.loc 1 89 1 is_stmt 0 view .LVU142
 616 0000 82B0     		sub	sp, sp, #8
 617              	.LCFI14:
 618              		.cfi_def_cfa_offset 8
 619 0002 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 620              	.LCFI15:
 621              		.cfi_def_cfa_offset 32
 622              		.cfi_offset 4, -32
 623              		.cfi_offset 5, -28
 624              		.cfi_offset 6, -24
 625              		.cfi_offset 7, -20
 626              		.cfi_offset 8, -16
 627              		.cfi_offset 14, -12
 628 0006 82B0     		sub	sp, sp, #8
ARM GAS  /tmp/ccsREWp9.s 			page 31


 629              	.LCFI16:
 630              		.cfi_def_cfa_offset 40
 631 0008 0646     		mov	r6, r0
 632 000a 8846     		mov	r8, r1
 633 000c 08A9     		add	r1, sp, #32
 634 000e 81E80C00 		stm	r1, {r2, r3}
 635 0012 0D9F     		ldr	r7, [sp, #52]
  90:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c ****     GenericADC_TypeDef     *adc_generic;
 636              		.loc 1 90 5 is_stmt 1 view .LVU143
  91:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c ****     MAX116xx_DriverTypeDef *driver;
 637              		.loc 1 91 5 view .LVU144
  92:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c **** 
  93:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c ****     driver = (MAX116xx_DriverTypeDef *)malloc(sizeof(MAX116xx_DriverTypeDef));
 638              		.loc 1 93 5 view .LVU145
 639              		.loc 1 93 40 is_stmt 0 view .LVU146
 640 0014 0C20     		movs	r0, #12
 641              	.LVL58:
 642              		.loc 1 93 40 view .LVU147
 643 0016 FFF7FEFF 		bl	malloc
 644              	.LVL59:
  94:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c ****     if(driver == NULL) return NULL;
 645              		.loc 1 94 5 is_stmt 1 view .LVU148
 646              		.loc 1 94 7 is_stmt 0 view .LVU149
 647 001a 0546     		mov	r5, r0
 648 001c F0B1     		cbz	r0, .L32
  95:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c **** 
  96:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c ****     adc_generic           = GenericADC_newADC(Init);
 649              		.loc 1 96 5 is_stmt 1 view .LVU150
 650              		.loc 1 96 29 is_stmt 0 view .LVU151
 651 001e 0C9B     		ldr	r3, [sp, #48]
 652 0020 0093     		str	r3, [sp]
 653 0022 08AB     		add	r3, sp, #32
 654 0024 0FCB     		ldm	r3, {r0, r1, r2, r3}
 655              	.LVL60:
 656              		.loc 1 96 29 view .LVU152
 657 0026 FFF7FEFF 		bl	GenericADC_newADC
 658              	.LVL61:
 659 002a 0446     		mov	r4, r0
 660              	.LVL62:
  97:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c ****     adc_generic->adc_task = mux_task;
 661              		.loc 1 97 5 is_stmt 1 view .LVU153
 662              		.loc 1 97 27 is_stmt 0 view .LVU154
 663 002c 0E4B     		ldr	r3, .L35
 664 002e 8360     		str	r3, [r0, #8]
  98:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c ****     adc_generic->adc_ctx  = mux;
 665              		.loc 1 98 5 is_stmt 1 view .LVU155
 666              		.loc 1 98 27 is_stmt 0 view .LVU156
 667 0030 C760     		str	r7, [r0, #12]
  99:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c **** 
 100:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c ****     MUX_setScanSize(mux, Init.channel_len);
 668              		.loc 1 100 5 is_stmt 1 view .LVU157
 669 0032 9DF82010 		ldrb	r1, [sp, #32]	@ zero_extendqisi2
 670 0036 3846     		mov	r0, r7
 671              	.LVL63:
 672              		.loc 1 100 5 is_stmt 0 view .LVU158
 673 0038 FFF7FEFF 		bl	MUX_setScanSize
 674              	.LVL64:
ARM GAS  /tmp/ccsREWp9.s 			page 32


 101:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c ****     mux->task_fn  = max116xx_init_request_task;
 675              		.loc 1 101 5 is_stmt 1 view .LVU159
 676              		.loc 1 101 19 is_stmt 0 view .LVU160
 677 003c 0B4B     		ldr	r3, .L35+4
 678 003e FB60     		str	r3, [r7, #12]
 102:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c ****     mux->task_ctx = hchip;
 679              		.loc 1 102 5 is_stmt 1 view .LVU161
 680              		.loc 1 102 19 is_stmt 0 view .LVU162
 681 0040 3E61     		str	r6, [r7, #16]
 103:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c **** 
 104:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c ****     GenericADC_startSample(adc_generic);
 682              		.loc 1 104 5 is_stmt 1 view .LVU163
 683 0042 2046     		mov	r0, r4
 684 0044 FFF7FEFF 		bl	GenericADC_startSample
 685              	.LVL65:
 105:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c **** 
 106:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c ****     driver->sample =
 686              		.loc 1 106 5 view .LVU164
 107:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c ****         (uint16_t *)malloc(sizeof(uint16_t) * adc_generic->sample_size);
 687              		.loc 1 107 58 is_stmt 0 view .LVU165
 688 0048 2079     		ldrb	r0, [r4, #4]	@ zero_extendqisi2
 689              		.loc 1 107 21 view .LVU166
 690 004a 4000     		lsls	r0, r0, #1
 691 004c FFF7FEFF 		bl	malloc
 692              	.LVL66:
 106:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c ****         (uint16_t *)malloc(sizeof(uint16_t) * adc_generic->sample_size);
 693              		.loc 1 106 20 view .LVU167
 694 0050 A860     		str	r0, [r5, #8]
 108:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c ****     driver->adc_generic = adc_generic;
 695              		.loc 1 108 5 is_stmt 1 view .LVU168
 696              		.loc 1 108 25 is_stmt 0 view .LVU169
 697 0052 2C60     		str	r4, [r5]
 109:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c ****     driver->sched_id    = sched_id;
 698              		.loc 1 109 5 is_stmt 1 view .LVU170
 699              		.loc 1 109 25 is_stmt 0 view .LVU171
 700 0054 85F80480 		strb	r8, [r5, #4]
 110:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c ****     hchip->driver       = driver;
 701              		.loc 1 110 5 is_stmt 1 view .LVU172
 702              		.loc 1 110 25 is_stmt 0 view .LVU173
 703 0058 B560     		str	r5, [r6, #8]
 111:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c **** 
 112:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c ****     return adc_generic->interface;
 704              		.loc 1 112 5 is_stmt 1 view .LVU174
 705              		.loc 1 112 23 is_stmt 0 view .LVU175
 706 005a 2568     		ldr	r5, [r4]
 707              	.LVL67:
 708              	.L32:
 113:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c **** }
 709              		.loc 1 113 1 view .LVU176
 710 005c 2846     		mov	r0, r5
 711 005e 02B0     		add	sp, sp, #8
 712              	.LCFI17:
 713              		.cfi_def_cfa_offset 32
 714              		@ sp needed
 715 0060 BDE8F041 		pop	{r4, r5, r6, r7, r8, lr}
 716              	.LCFI18:
 717              		.cfi_restore 14
ARM GAS  /tmp/ccsREWp9.s 			page 33


 718              		.cfi_restore 8
 719              		.cfi_restore 7
 720              		.cfi_restore 6
 721              		.cfi_restore 5
 722              		.cfi_restore 4
 723              		.cfi_def_cfa_offset 8
 724              	.LVL68:
 725              		.loc 1 113 1 view .LVU177
 726 0064 02B0     		add	sp, sp, #8
 727              	.LCFI19:
 728              		.cfi_def_cfa_offset 0
 729 0066 7047     		bx	lr
 730              	.L36:
 731              		.align	2
 732              	.L35:
 733 0068 00000000 		.word	mux_task
 734 006c 00000000 		.word	max116xx_init_request_task
 735              		.cfi_endproc
 736              	.LFE156:
 738              		.section	.text.MAX116xx_Init,"ax",%progbits
 739              		.align	1
 740              		.global	MAX116xx_Init
 741              		.syntax unified
 742              		.thumb
 743              		.thumb_func
 745              	MAX116xx_Init:
 746              	.LVL69:
 747              	.LFB157:
 114:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c **** 
 115:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c **** MAX116xx_HandleTypeDef *
 116:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c **** MAX116xx_Init(I2C_HandleTypeDef *hi2c, uint8_t addr)
 117:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c **** {
 748              		.loc 1 117 1 is_stmt 1 view -0
 749              		.cfi_startproc
 750              		@ args = 0, pretend = 0, frame = 0
 751              		@ frame_needed = 0, uses_anonymous_args = 0
 752              		.loc 1 117 1 is_stmt 0 view .LVU179
 753 0000 38B5     		push	{r3, r4, r5, lr}
 754              	.LCFI20:
 755              		.cfi_def_cfa_offset 16
 756              		.cfi_offset 3, -16
 757              		.cfi_offset 4, -12
 758              		.cfi_offset 5, -8
 759              		.cfi_offset 14, -4
 760 0002 0546     		mov	r5, r0
 761 0004 0C46     		mov	r4, r1
 118:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c ****     MAX116xx_HandleTypeDef *hchip =
 762              		.loc 1 118 5 is_stmt 1 view .LVU180
 119:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c ****         (MAX116xx_HandleTypeDef *)malloc(sizeof(MAX116xx_HandleTypeDef));
 763              		.loc 1 119 35 is_stmt 0 view .LVU181
 764 0006 0C20     		movs	r0, #12
 765              	.LVL70:
 766              		.loc 1 119 35 view .LVU182
 767 0008 FFF7FEFF 		bl	malloc
 768              	.LVL71:
 120:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c **** 
 121:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c ****     hchip->hi2c           = hi2c;
ARM GAS  /tmp/ccsREWp9.s 			page 34


 769              		.loc 1 121 5 is_stmt 1 view .LVU183
 770              		.loc 1 121 27 is_stmt 0 view .LVU184
 771 000c 0560     		str	r5, [r0]
 122:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c ****     hchip->program.config = MAX116XX_CONFIG_BYTE(0);
 772              		.loc 1 122 5 is_stmt 1 view .LVU185
 773              		.loc 1 122 27 is_stmt 0 view .LVU186
 774 000e 0022     		movs	r2, #0
 775 0010 8271     		strb	r2, [r0, #6]
 123:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c ****     hchip->program.setup  = MAX116XX_SETUP_BYTE(0);
 776              		.loc 1 123 5 is_stmt 1 view .LVU187
 777              		.loc 1 123 27 is_stmt 0 view .LVU188
 778 0012 8022     		movs	r2, #128
 779 0014 4271     		strb	r2, [r0, #5]
 124:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c ****     hchip->addr           = addr;
 780              		.loc 1 124 5 is_stmt 1 view .LVU189
 781              		.loc 1 124 27 is_stmt 0 view .LVU190
 782 0016 0471     		strb	r4, [r0, #4]
 125:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c **** 
 126:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c ****     return hchip;
 783              		.loc 1 126 5 is_stmt 1 view .LVU191
 127:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c **** }
 784              		.loc 1 127 1 is_stmt 0 view .LVU192
 785 0018 38BD     		pop	{r3, r4, r5, pc}
 786              		.loc 1 127 1 view .LVU193
 787              		.cfi_endproc
 788              	.LFE157:
 790              		.section	.text.MAX116xx_preset0_max11615,"ax",%progbits
 791              		.align	1
 792              		.global	MAX116xx_preset0_max11615
 793              		.syntax unified
 794              		.thumb
 795              		.thumb_func
 797              	MAX116xx_preset0_max11615:
 798              	.LVL72:
 799              	.LFB158:
 128:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c **** 
 129:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c **** /*
 130:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c ****  * Preset for MAX11615
 131:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c ****  *
 132:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c ****  *  1. SEL (0b010)
 133:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c ****  *      - Vref: External Reference
 134:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c ****  *      - REF pin: Reference Input
 135:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c ****  *  2. CLK (0b1)
 136:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c ****  *      - use external clock to avoid clock stretching
 137:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c ****  *  3. BIP/UNI (0b0)
 138:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c ****  *      - use unipolar mode
 139:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c ****  *  4. SCAN (0b11)
 140:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c ****  *      - converts channel selected by CS[3:0]
 141:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c ****  *  5. SGL/DIF (0b0)
 142:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c ****  *      - use differential mode
 143:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c ****  *  6. CS (0b0001)
 144:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c ****  *      - select DIF(+AIN1-AIN0) as channel
 145:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c ****  **/
 146:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c **** MAX116xx_HandleTypeDef *
 147:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c **** MAX116xx_preset0_max11615(I2C_HandleTypeDef *hi2c, uint8_t addr)
 148:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c **** {
 800              		.loc 1 148 1 is_stmt 1 view -0
ARM GAS  /tmp/ccsREWp9.s 			page 35


 801              		.cfi_startproc
 802              		@ args = 0, pretend = 0, frame = 0
 803              		@ frame_needed = 0, uses_anonymous_args = 0
 804              		.loc 1 148 1 is_stmt 0 view .LVU195
 805 0000 10B5     		push	{r4, lr}
 806              	.LCFI21:
 807              		.cfi_def_cfa_offset 8
 808              		.cfi_offset 4, -8
 809              		.cfi_offset 14, -4
 149:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c ****     MAX116xx_HandleTypeDef *max116xx = MAX116xx_Init(hi2c, addr);
 810              		.loc 1 149 5 is_stmt 1 view .LVU196
 811              		.loc 1 149 40 is_stmt 0 view .LVU197
 812 0002 FFF7FEFF 		bl	MAX116xx_Init
 813              	.LVL73:
 814              		.loc 1 149 40 view .LVU198
 815 0006 0446     		mov	r4, r0
 816              	.LVL74:
 150:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c **** 
 151:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c ****     MAX116xx_setSEL(max116xx, 0b010);
 817              		.loc 1 151 5 is_stmt 1 view .LVU199
 818 0008 0221     		movs	r1, #2
 819 000a FFF7FEFF 		bl	MAX116xx_setSEL
 820              	.LVL75:
 152:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c ****     MAX116xx_setCLK(max116xx, MAX116XX_EXTERNAL_CLK);
 821              		.loc 1 152 5 view .LVU200
 822 000e 0121     		movs	r1, #1
 823 0010 2046     		mov	r0, r4
 824 0012 FFF7FEFF 		bl	MAX116xx_setCLK
 825              	.LVL76:
 153:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c ****     MAX116xx_setPOLAR(max116xx, MAX116XX_UNIPOLAR);
 826              		.loc 1 153 5 view .LVU201
 827 0016 0021     		movs	r1, #0
 828 0018 2046     		mov	r0, r4
 829 001a FFF7FEFF 		bl	MAX116xx_setPOLAR
 830              	.LVL77:
 154:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c ****     MAX116xx_configSCAN(max116xx, 0b11);
 831              		.loc 1 154 5 view .LVU202
 832 001e 0321     		movs	r1, #3
 833 0020 2046     		mov	r0, r4
 834 0022 FFF7FEFF 		bl	MAX116xx_configSCAN
 835              	.LVL78:
 155:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c ****     MAX116xx_configCS(max116xx, 0b0001);
 836              		.loc 1 155 5 view .LVU203
 837 0026 0121     		movs	r1, #1
 838 0028 2046     		mov	r0, r4
 839 002a FFF7FEFF 		bl	MAX116xx_configCS
 840              	.LVL79:
 156:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c ****     MAX116xx_configSGLDIF(max116xx, MAX116XX_DIFFERENTIAL);
 841              		.loc 1 156 5 view .LVU204
 842 002e 0021     		movs	r1, #0
 843 0030 2046     		mov	r0, r4
 844 0032 FFF7FEFF 		bl	MAX116xx_configSGLDIF
 845              	.LVL80:
 157:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c ****     MAX116xx_program(max116xx);
 846              		.loc 1 157 5 view .LVU205
 847 0036 2046     		mov	r0, r4
 848 0038 FFF7FEFF 		bl	MAX116xx_program
ARM GAS  /tmp/ccsREWp9.s 			page 36


 849              	.LVL81:
 158:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c **** 
 159:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c ****     return max116xx;
 850              		.loc 1 159 5 view .LVU206
 160:fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.c **** }
 851              		.loc 1 160 1 is_stmt 0 view .LVU207
 852 003c 2046     		mov	r0, r4
 853 003e 10BD     		pop	{r4, pc}
 854              		.loc 1 160 1 view .LVU208
 855              		.cfi_endproc
 856              	.LFE158:
 858              		.text
 859              	.Letext0:
 860              		.file 3 "/usr/share/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/machine/_default_types.h"
 861              		.file 4 "/usr/share/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/sys/_stdint.h"
 862              		.file 5 "fw-lib-stm32-CocktailOS/kernel/core/task.h"
 863              		.file 6 "fw-lib-stm32-CocktailOS/kernel/core/pcb.h"
 864              		.file 7 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f746xx.h"
 865              		.file 8 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_def.h"
 866              		.file 9 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_dma.h"
 867              		.file 10 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_i2c.h"
 868              		.file 11 "fw-lib-stm32-CocktailOS/kernel/core/event.h"
 869              		.file 12 "fw-lib-stm32-CocktailOS/kernel/peripheral/cocktail_gpio.h"
 870              		.file 13 "fw-lib-stm32-BuildKit/adc-essential/adc_generic.h"
 871              		.file 14 "fw-lib-stm32-BuildKit/decoder/decoder.h"
 872              		.file 15 "fw-lib-stm32-BuildKit/multiplexer/mux.h"
 873              		.file 16 "fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/Target/max116xx_platform.h"
 874              		.file 17 "fw-lib-stm32-BuildKit/adc-toolkit/max116xx-i2c/App/max116xx.h"
 875              		.file 18 "/usr/share/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/stdlib.h"
 876              		.file 19 "fw-lib-stm32-CocktailOS/kernel/peripheral/cocktail_periph.h"
ARM GAS  /tmp/ccsREWp9.s 			page 37


DEFINED SYMBOLS
                            *ABS*:0000000000000000 max116xx_platform.c
     /tmp/ccsREWp9.s:20     .text.MAX116xx_isReadyFast:0000000000000000 $t
     /tmp/ccsREWp9.s:25     .text.MAX116xx_isReadyFast:0000000000000000 MAX116xx_isReadyFast
     /tmp/ccsREWp9.s:52     .text.max116xx_response_task:0000000000000000 $t
     /tmp/ccsREWp9.s:57     .text.max116xx_response_task:0000000000000000 max116xx_response_task
     /tmp/ccsREWp9.s:176    .text.max116xx_response_task:0000000000000054 $d
     /tmp/ccsREWp9.s:181    .text.max116xx_init_request_task:0000000000000000 $t
     /tmp/ccsREWp9.s:186    .text.max116xx_init_request_task:0000000000000000 max116xx_init_request_task
     /tmp/ccsREWp9.s:309    .text.max116xx_init_request_task:000000000000005c $d
     /tmp/ccsREWp9.s:453    .text.max116xx_request_task:0000000000000000 max116xx_request_task
     /tmp/ccsREWp9.s:317    .text.MAX116xx_write_nowait:0000000000000000 $t
     /tmp/ccsREWp9.s:323    .text.MAX116xx_write_nowait:0000000000000000 MAX116xx_write_nowait
     /tmp/ccsREWp9.s:366    .text.MAX116xx_write:0000000000000000 $t
     /tmp/ccsREWp9.s:372    .text.MAX116xx_write:0000000000000000 MAX116xx_write
     /tmp/ccsREWp9.s:407    .text.MAX116xx_read:0000000000000000 $t
     /tmp/ccsREWp9.s:413    .text.MAX116xx_read:0000000000000000 MAX116xx_read
     /tmp/ccsREWp9.s:448    .text.max116xx_request_task:0000000000000000 $t
     /tmp/ccsREWp9.s:491    .text.MAX116xx_read_nowait:0000000000000000 $t
     /tmp/ccsREWp9.s:497    .text.MAX116xx_read_nowait:0000000000000000 MAX116xx_read_nowait
     /tmp/ccsREWp9.s:540    .text.MAX116xx_program_nowait:0000000000000000 $t
     /tmp/ccsREWp9.s:546    .text.MAX116xx_program_nowait:0000000000000000 MAX116xx_program_nowait
     /tmp/ccsREWp9.s:571    .text.MAX116xx_program:0000000000000000 $t
     /tmp/ccsREWp9.s:577    .text.MAX116xx_program:0000000000000000 MAX116xx_program
     /tmp/ccsREWp9.s:602    .text.MAX116xx_getInterface:0000000000000000 $t
     /tmp/ccsREWp9.s:608    .text.MAX116xx_getInterface:0000000000000000 MAX116xx_getInterface
     /tmp/ccsREWp9.s:733    .text.MAX116xx_getInterface:0000000000000068 $d
     /tmp/ccsREWp9.s:739    .text.MAX116xx_Init:0000000000000000 $t
     /tmp/ccsREWp9.s:745    .text.MAX116xx_Init:0000000000000000 MAX116xx_Init
     /tmp/ccsREWp9.s:791    .text.MAX116xx_preset0_max11615:0000000000000000 $t
     /tmp/ccsREWp9.s:797    .text.MAX116xx_preset0_max11615:0000000000000000 MAX116xx_preset0_max11615

UNDEFINED SYMBOLS
Cocktail_newTask
HAL_I2C_Master_Transmit
HAL_I2C_Master_Transmit_IT
HAL_I2C_Master_Receive_IT
HAL_I2C_Master_Receive
malloc
GenericADC_newADC
MUX_setScanSize
GenericADC_startSample
mux_task
MAX116xx_setSEL
MAX116xx_setCLK
MAX116xx_setPOLAR
MAX116xx_configSCAN
MAX116xx_configCS
MAX116xx_configSGLDIF
